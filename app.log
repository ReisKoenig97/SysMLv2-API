 json_utils: load_json - DEBUG - Successfully read file: <_io.TextIOWrapper name='config/default_config.json' mode='r' encoding='cp1252'>. (utils.json_utils_load_json)
 config_utils: load_config - INFO - Config file 'config/default_config.json' loaded successfully.
 versioncontrol - DEBUG - VersionControl initialized.
 metadata_manager - INFO - Initialized MetadataManager
 metadata_manager - DEBUG - Creating mapping.json from template
 metadata_manager - INFO - Mapping file already exists at ./config/mapping.json
 metadata_manager - DEBUG - MetadataManager initialized
 __main__ - DEBUG - Updating SysML model with metadata
 metadata_manager - INFO - Startig update_sysml_model
 json_utils: load_json - DEBUG - Successfully read file: <_io.TextIOWrapper name='./config/mapping.json' mode='r' encoding='cp1252'>. (utils.json_utils_load_json)
 metadata_manager - DEBUG - Updating value in SysMLv2 model: metadata_test.partB.id with value: KiCad
 metadata_manager - DEBUG - Updated content: ['package metadata_test{\n', '    \n', '    public import SI::*; \n', '    public import ScalarValues::*; \n', '\n', '    metadata def PCB{\n', '        doc /* This metadata def is mainly used to tag\n', '            * certain elements of the model for better\n', '            * grouping. \n', '            */\n', '    }    \n', '\n', '    metadata def UUID{\n', '        uuid : String;\n', '    }\n', '\n', '    @PCB about\n', '        partA,\n', '        partB;\n', '    \n', '    part def partA{\n', '        attribute id = "Hades_project";\n', '        attribute mass = 50.1; // 50.1 \n', '    }\n', '    part def partB{\n', '        attribute id = "KiCad";\n', '        attribute len : Real;\n', '    }   \n', '    part def partC{\n', '        attribute id : String;\n', '        attribute len : Real; \n', '        attribute lenA : Real;  \n', '    }   \n', '    part def partD{\n', '        attribute id = "48616465-735f-4707-926f-6a6563742e6b";\n', '    }\n', '}\n']
 __main__ - DEBUG - Initializing GUI
 __main__ - DEBUG - Initializing MetadataManager and VersionControl (in class GUI)
 __main__ - DEBUG - Creating Widgets for GUI
 __main__ - DEBUG - Setting up layout for GUI
